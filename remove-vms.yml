---
# VM Removal Playbook for Proxmox
#
# This playbook uses SSH + qm CLI commands for batch VM deletion.
# While the Proxmox API supports VM deletion, using qm commands provides:
# 1. Atomic batch operations (faster for multiple VMs)
# 2. Consistent behavior with deployment playbook
# 3. Better error messages from native tools
#
# For API-based single VM operations, see library/proxmox_api.py
# See API_USAGE.md for detailed explanation of hybrid approach.

- name: Remove OpenSUSE Virtual Machines from Proxmox
  hosts: proxmox_host
  gather_facts: false

  vars_files:
    - vars/vm_config.yml

  vars:
    confirm_deletion: false  # Set to true to actually delete VMs

  tasks:
    - name: Safety check - require confirmation
      ansible.builtin.fail:
        msg: |
          SAFETY CHECK: VM deletion not confirmed!
          
          To delete VMs, set confirm_deletion: true in this playbook or pass as extra var:
          ansible-playbook -i inventory.ini remove-vms.yml -e "confirm_deletion=true"
          
          This will DELETE the following VMs:
          {% for vm in vms %}
          - {{ vm.name }} (VMID: {{ vm.vmid }})
          {% endfor %}
      when: not confirm_deletion

    - name: Display VMs to be removed
      ansible.builtin.debug:
        msg: |
          The following VMs will be PERMANENTLY DELETED:
          {% for vm in vms %}
          - {{ vm.name }} (VMID: {{ vm.vmid }})
          {% endfor %}

    - name: Stop VMs using qm command
      ansible.builtin.shell: |
        qm stop {{ item.vmid }} || true
      loop: "{{ vms }}"
      register: stop_result
      changed_when: true
      failed_when: false

    - name: Wait for VMs to stop
      ansible.builtin.pause:
        seconds: 5

    - name: Delete VMs using qm command
      ansible.builtin.shell: |
        qm destroy {{ item.vmid }} --purge
      loop: "{{ vms }}"
      register: destroy_result
      changed_when: true
      failed_when: false

    - name: Display deletion errors (if any)
      ansible.builtin.debug:
        msg: "Failed to delete VM {{ item.item.vmid }}: {{ item.stderr }}"
      loop: "{{ destroy_result.results }}"
      when: item.rc != 0 and item.stderr != ""

    - name: Display removal summary
      ansible.builtin.debug:
        msg: |
          ===============================================
          VMs Removed Successfully
          ===============================================
          {% for vm in vms %}
          - {{ vm.name }} (VMID: {{ vm.vmid }})
          {% endfor %}
          ===============================================
          
          Note: VM disk images have been removed.
          Base image still exists at: {{ opensuse_image_path }}
